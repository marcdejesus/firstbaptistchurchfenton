// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  uuid         String    @unique @default(uuid())
  email        String    @unique
  name         String
  role         Role      @default(EDITOR)
  passwordHash String?   @map("password_hash")
  isActive     Boolean   @default(true) @map("is_active")
  lastLoginAt  DateTime? @map("last_login_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // Relations
  blogPosts       BlogPost[]
  staffMembers    StaffMember[]
  ministries      Ministry[]
  missionPartners MissionPartner[]
  faqs            FAQ[]
  volunteerSignups VolunteerSignup[]
  prayerRequests  PrayerRequest[]
  contactSubmissions ContactSubmission[]
  
  @@map("users")
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String   @db.Text
  order     Int      @default(0)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  createdBy Int?     @map("created_by")
  
  user User? @relation(fields: [createdBy], references: [id])
  
  @@map("faqs")
}

model HomeSlideshow {
  id          Int      @id @default(autoincrement())
  title       String?
  subtitle    String?
  imageUrl    String   @map("image_url")
  imageKey    String   @map("image_key") // UploadThing file key
  linkUrl     String?  @map("link_url")
  linkText    String?  @map("link_text")
  order       Int      @default(0)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("home_slideshow")
}

model CurrentSeries {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  imageUrl    String   @map("image_url")
  imageKey    String   @map("image_key") // UploadThing file key
  startDate   DateTime @map("start_date")
  endDate     DateTime? @map("end_date")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("current_series")
}

model DonateSettings {
  id          Int      @id @default(autoincrement())
  donateUrl   String   @map("donate_url")
  description String?  @db.Text
  isActive    Boolean  @default(true) @map("is_active")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("donate_settings")
}

model BlogPost {
  id           Int         @id @default(autoincrement())
  uuid         String      @unique @default(uuid())
  title        String
  slug         String      @unique
  excerpt      String?
  content      String      @db.Text
  thumbnailUrl String?     @map("thumbnail_url")
  thumbnailKey String?     @map("thumbnail_key") // UploadThing file key
  status       PostStatus  @default(DRAFT)
  publishedAt  DateTime?   @map("published_at")
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")
  authorId     Int         @map("author_id")
  
  author User @relation(fields: [authorId], references: [id])
  
  @@map("blog_posts")
}

model StaffMember {
  id          Int      @id @default(autoincrement())
  name        String
  position    String
  description String?  @db.Text
  email       String?
  photoUrl    String?  @map("photo_url")
  photoKey    String?  @map("photo_key") // UploadThing file key
  order       Int      @default(0)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdBy   Int?     @map("created_by")
  
  user User? @relation(fields: [createdBy], references: [id])
  
  @@map("staff_members")
}

model Ministry {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  imageUrl    String?  @map("image_url")
  imageKey    String?  @map("image_key") // UploadThing file key
  targetAudience String? @map("target_audience") // Adults, Youth, Children
  meetingTime String?  @map("meeting_time")
  contactEmail String? @map("contact_email")
  order       Int      @default(0)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdBy   Int?     @map("created_by")
  
  user User? @relation(fields: [createdBy], references: [id])
  
  @@map("ministries")
}

model MissionPartner {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  location    String?
  website     String?
  imageUrl    String?  @map("image_url")
  imageKey    String?  @map("image_key") // UploadThing file key
  type        MissionType @default(LOCAL) // LOCAL, INTERNATIONAL
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdBy   Int?     @map("created_by")
  
  user User? @relation(fields: [createdBy], references: [id])
  
  @@map("mission_partners")
}

// Keep existing models for current functionality
model VolunteerSignup {
  id            Int             @id @default(autoincrement())
  opportunityId String          @map("opportunity_id")
  userId        Int             @map("user_id")
  message       String?
  status        VolunteerStatus @default(PENDING)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("volunteer_signups")
}

model PrayerRequest {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  phone     String?
  message   String
  isPublic  Boolean  @default(false) @map("is_public")
  isAnswered Boolean @default(false) @map("is_answered")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  createdBy Int?     @map("created_by")

  user User? @relation(fields: [createdBy], references: [id])

  @@map("prayer_requests")
}

model ContactSubmission {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String?
  message   String
  phone     String?
  isRead    Boolean  @default(false) @map("is_read")
  createdAt DateTime @default(now()) @map("created_at")
  createdBy Int?     @map("created_by")

  user User? @relation(fields: [createdBy], references: [id])

  @@map("contact_submissions")
}

// Enums
enum Role {
  ADMIN
  EDITOR
  VIEWER
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum MissionType {
  LOCAL
  INTERNATIONAL
}

enum VolunteerStatus {
  PENDING
  CONFIRMED
  DECLINED
}